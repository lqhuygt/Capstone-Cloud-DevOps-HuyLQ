version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  build-test-lint:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
          - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-docker:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Build application Docker image
          command: |
            docker build -t huylq1999/capstone_aws_devops .
            docker image ls

      - run:
          name: Push to Dockerhub
          command: |
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker push huylq1999/capstone_aws_devops

  config-infrastructure:
    executor: aws-cli/default
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "91:26:dd:e2:ca:b6:8d:08:02:80:22:48:be:6e:18:1c:8d:7b:d2:97"

      # - aws-cli/setup:
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     aws-region: AWS_DEFAULT_REGION

      # - run:
      #     name: Check aws cli
      #     command: |
      #       aws --version
      #       aws configure list

      - run: 
          name: Test ssh to ec2 instance
          command: |
            echo "$KEY_PAIR_EC2" >> huylq23-keypair.pem
            ls -l
            chmod 400 huylq23-keypair.pem
            ls -l
            ssh -i "huylq23-keypair.pem" ec2-user@ec2-44-204-194-68.compute-1.amazonaws.com
            yes
            aws --version



      # - run:
      #     name: Install eksctl
      #     command: |
      #       pwd
      #       ls -la
      #       curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /bin
      #       chmod +x /bin/eksctl
      #       eksctl version

      # - run:
      #     name: Install kubectl
      #     command: |
      #       curl -sSLo /bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #       chmod +x /bin/kubectl
      #       kubectl version --client

      # - run:
      #     name: deploy k8s cluster
      #     command: |
      #       eksctl create cluster -f eks_cluster.yml
      #       kubectl get nodes
      #       kubectl run capstone-kube --image=huylq1999/capstone_aws_devops --port=5000
      #       kubectl get pods
      #       # kubectl port-forward capstone-kube 5000:5000



workflows:
  default:
    jobs:
      - build-test-lint
      - build-docker:
          requires:
            - build-test-lint
      - config-infrastructure:
          context: aws
          requires:
            - build-docker